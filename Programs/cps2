-- Command thingy for adventure cactuses
-- CPS stands for Command Processing Service, Not Child Protective Services 
-- This thing would always crash every 5 seconds. It was a pain to have to restart it - MFenflower

os.unloadAPI("rom/programs/asm")
os.loadAPI("rom/programs/asm")
local function os_reboot() os.reboot() end
local chtx=peripheral.wrap("left")
local advp=peripheral.wrap("right")
local set=infutil.readPrefs("_cps") or {
	greeting="Hello $p!",
	name="^6[O]^f",
	warps={},
}
local player={}
local sel={}
local function splr(name)
	for k,v in pairs(advp.getPlayerUsernames()) do
		if string.lower(string.sub(v,1,#name))==string.lower(name) then
			return v
		end
	end
end
setmetatable(player,{
	__index=function(s,n)
		return advp.getPlayerByName(splr(n))
	end
})
local function prt(txt,plr,tf)
	if type(txt)~="string" then
		if not tostring(txt) then
			return
		end
		txt=tostring(txt)
	end
	tf=tf or (set.name.." ")
	txt=string.gsub(tf..txt,"%^","§")
	if plr then
		player[plr].sendChat(txt)
	else
		for k,v in pairs(advp.getPlayerUsernames()) do
			player[v].sendChat(txt)
		end
	end
end
local function tp(plr,x,y,z)
	local sppt=player[plr].asEntity().setPosition
	if tonumber(x) then
		sppt(tonumber(x),tonumber(y),tonumber(z))
	else
		sppt(player[x].asEntity().getPosition())		
	end
end
snet.open()
function process(p)
	if p == nil then
		prt("Empty event table detected")
		os_reboot()
	end
	if p[1] == "chat_message" and #p < 3 then
		prt("Invalid event table detected")
		os_reboot()
	end
	if p[1]=="chat_message" then
		if string.sub(p[3],1,2)=="/\\" then
			p[3]=string.sub(p[3],3)
		end
		local tW = {}
		for match in string.gmatch(p[3],"[^ \t]+") do
			table.insert(tW,match)
		end
		setmetatable(tW,{__index=function() return "" end})
		if tW[1]=="!rs" then
			local state
			if tW[3]=="1" or string.lower(tW[3])=="true" or string.lower(tW[3])=="on" then
				state=true
			elseif tW[3]=="0" or string.lower(tW[3])=="false" or string.lower(tW[3])=="off" then
				state=false
			end
			local s,err=pcall(rs.setOutput,tW[2],state)
			if not s then
				prt((err or "Unknown error"),p[2])
			end
		elseif tW[1]=="potato" then
			prt("Who needs OpenCCSensors when you have Adventure Cactuses?")
			local x,y,z=player[p[2]].asEntity().getPosition()
			local w=advp.getWorld(player[p[2]].asEntity().getWorldID())
			w.setBlock(x,y,z,54,0)
			local te=w.getTileEntity(x,y,z)
			local snbt=nbt.read(te)
			table.insert(snbt.value.Items.value, {type="compound",value={id={type="short",value=392},Count={type="byte",value=64},Damage={type="short",value=0},Slot={type="byte",value=0}}})
			nbt.write(te,snbt)
		elseif tW[1]=="ping" then
			prt("pong")
		elseif tW[1]=="!reload" then
			prt("Reloading...")
			sleep(1)
			os_reboot()
		elseif tW[1]=="!set" then
			if tW[2]=="greeting" then
				local st={}
				for k,v in pairs(tW) do
					if k>2 then
						table.insert(st,v)
					end
				end
				set.greeting=table.concat(st," ")
				prt("Greeting set!")
			elseif tW[2]=="name" then
				set.name=table.concat({unpack(tW,3)}," ")
				prt("Name set!")
			else
				prt("No such var.")
			end
			infutil.savePrefs("_cps",set)
		elseif tW[1]=="!icbm" then
			local x,y,z=player[tW[2]].asEntity().getPosition()
			peripheral.call("back","setTarget",x,10,z)
			peripheral.call("back","launch")
		elseif tW[1]=="!heal" then
			local pl
			if tW[2]=="" then
				pl=p[2]
			else
				pl=tW[2]
			end
			pl=player[pl]
			if not pcall(pl.getHealth) then
				prt("Error healing player.")
			else
				pl.heal(20)
			end
		elseif tW[1]=="!tp" then
			if tonumber(tW[5]) then
				if splr(tW[2]) == nil then
					prt("No such player")
				else
					tp(tW[2],tW[3],tW[4],tW[5])
					prt("Teleported "..splr(tW[2]).." to "..tW[3]..","..tW[4]..","..tW[5])
				end
			elseif tonumber(tW[4]) then
				tp(p[2],tW[2],tW[3],tW[4])
				prt("Teleported "..splr(p[2]).." to "..tW[2]..","..tW[3]..","..tW[4])
			elseif tW[3]~="" then
				if splr(tW[2]) == nil then
					prt("No such player: " .. tW[2])
				elseif splr(tW[3]) == nil then
					prt("No such player: " .. tW[3])
				else
					tp(tW[2],tW[3])
					prt("Teleported "..splr(tW[2]).." to "..splr(tW[3]))
				end
			else
				if splr(tW[2]) == nil then
					prt("No such player")
				else
					tp(p[2],tW[2])
					prt("Teleported "..splr(p[2]).." to "..splr(tW[2]))
				end
			end
		elseif tW[1]=="!warp" then
			local warpID = player[p[2]].asEntity().getWorldID()
			if tW[2]=="" then
				local out="Warps: "
				if set.warps[warpID] ~= nil then
					for k,v in pairs(set.warps[warpID]) do
						if v then
							out=out..k.."|"
						end
					end
				end
				prt(string.sub(out,1,-2),p[2])
			else
				if set.warps[warpID] == nil then
					prt("Invalid warp")
				else
					if set.warps[warpID][tW[2]] == nil then
						prt("Invalid warp")
					else
						player[p[2]].asEntity().setPosition(unpack(set.warps[warpID][tW[2]]))
					end
				end
			end
		elseif tW[1]=="!setwarp" then
			local warpID = player[p[2]].asEntity().getWorldID()
			local x,y,z
			if tonumber(tW[3]) then
				x,y,z=unpack(tW,3)
			else
				x,y,z=player[p[2]].asEntity().getPosition()
			end
			if set.warps[warpID] == nil then
				set.warps[warpID] = {}
			end
			set.warps[warpID][tW[2]]={tonumber(x),tonumber(y),tonumber(z)}
			infutil.savePrefs("_cps",set)
		elseif tW[1]=="!delwarp" then
			local warpID = player[p[2]].asEntity().getWorldID()
			if set.warps[warpID] == nil then
				prt("No such warp exists")
			else
				if set.warps[warpID][tW[2]] == nil then
					prt("No such warp exists")
				else
					set.warps[warpID][tW[2]]=nil
					infutil.savePrefs("_cps",set)
				end
			end
		elseif tW[1]=="!play" then
			local pl
			local snd
			if tW[3]=="" then
				snd=2
				pl=player[p[2]]
			else
				snd=3
				pl=player[tW[2]]
			end
			snd=table.concat({unpack(tW,snd)}," ")
			if not pcall(pl.getHealth) then
				prt("Error locating "..tW[2])
			else
				local x,y,z=pl.asEntity().getPosition()
				local err,dat=pcall(advp.getWorld(pl.asEntity().getWorldID()).playSound,snd,x,y,z,1,1)
				if not err then
					prt((dat or "Unknown error"),p[2])
				end
			end
		elseif tW[1]=="!calc" then
			prt(({pcall(setfenv(loadstring("return "..table.concat({unpack(tW,2)}," "):gsub("while",""):gsub("for","")) or function() return "Invalid calculation" end,math))})[2])
		elseif tW[1]=="!explode" then
			local pl
			if tW[2]=="" then
				pl=player[p[2]]
			else
				pl=player[tW[2]]
			end
			if not pcall(pl.getHealth) then
				prt("Error exploding "..tW[2])
			else
				local x,y,z=pl.asEntity().getPosition()
				advp.getWorld(pl.asEntity().getWorldID()).explode(x,y,z,4,false,false)
				pl.damage(20)
			end
		elseif tW[1]=="!disk" then
			local err,dat
			if tW[2]=="play" then
				rednet.broadcast(infutil.compress("diskplay",table.concat({unpack(tW,3)}," ")))
			elseif tW[2]=="stop" then
				rednet.broadcast(infutil.compress("diskstop"))
			end
		elseif tW[1]=="!asm" then
			local print=print
			_G.print=prt
			local a,b=pcall(asm.asm,table.concat({unpack(tW,2)}," "))
			if not a then
				prt(b)
			end
			_G.print=print
		elseif tW[1]=="!rasm" then
			os.unloadAPI("asm")
			os.loadAPI("rom/programs/asm")
		elseif tW[1]=="\\sel1" then
			sel[p[2]]=sel[p[2]] or {}
			sel[p[2]][1]={player[p[2]].asEntity().getPosition()}
			sel[p[2]][1][1]=math.floor(sel[p[2]][1][1])
			sel[p[2]][1][2]=math.floor(sel[p[2]][1][2])
			sel[p[2]][1][3]=math.floor(sel[p[2]][1][3])
			prt("Selection 1 is now "..infutil.compress(unpack(sel[p[2]][1]))..".")
		elseif tW[1]=="\\sel2" then
			sel[p[2]]=sel[p[2]] or {}
			sel[p[2]][2]={player[p[2]].asEntity().getPosition()}
			sel[p[2]][2][1]=math.floor(sel[p[2]][2][1])
			sel[p[2]][2][2]=math.floor(sel[p[2]][2][2])
			sel[p[2]][2][3]=math.floor(sel[p[2]][2][3])
			prt("Selection 2 is now "..infutil.compress(unpack(sel[p[2]][2]))..".")
		elseif tW[1]=="\\set" then
			if sel[p[2]] then
				if sel[p[2]][1] and sel[p[2]][2] then
					local w=advp.getWorld(player[p[2]].asEntity().getWorldID())
					local e1=w.getBlockID
					local e2=w.getMetadata
					w=w.setBlock
					local sx=sel[p[2]][1][1]
					local ex=sel[p[2]][2][1]
					if sx>ex then
						ex=sx
						sx=sel[p[2]][2][1]
					end
					local sy=sel[p[2]][1][2]
					local ey=sel[p[2]][2][2]
					if sy>ey then
						ey=sy
						sy=sel[p[2]][2][2]
					end
					local sz=sel[p[2]][1][3]
					local ez=sel[p[2]][2][3]
					if sz>ez then
						ez=sz
						sz=sel[p[2]][2][3]
					end
					local bl=tonumber(tW[2]) or 0
					prt("Setting "..(((ex-sx)+1)*((ey-sy)+1)*((ez-sz)+1)).." blocks.")
					local dm=tonumber(tW[3]) or 0
					local rl=tonumber(tW[4])
					local rd=tonumber(tW[5])
					if not rl then
						for lx=sx,ex do
							for ly=sy,ey do
								for lz=sz,ez do
									w(lx,ly,lz,bl,dm)
									os.queueEvent("a")
									os.pullEvent()
								end
							end
						end
					elseif rd then
						for lx=sx,ex do
							for ly=sy,ey do
								for lz=sz,ez do
									if e1(lx,ly,lz)==rl and e2(lx,ly,lz)==rd then
										w(lx,ly,lz,bl,dm)
									end
								end
							end
						end
					else
						for lx=sx,ex do
							for ly=sy,ey do
								for lz=sz,ez do
									if e1(lx,ly,lz)==rl then
										w(lx,ly,lz,bl,dm)
									end
								end
							end
						end
					end
				else
					if not sel[p[2]][1] then
						prt("Need selection 1.")
					else
						prt("Need selection 2.")
					end
				end
			else
				prt("Nothing selected.")
			end
		elseif tW[1]=="!r" then
			os.reboot()
		elseif tW[1]=="!stack" then
			local st=tonumber(tW[3]) or 64
			prt(math.floor(tW[2]/st).."x"..st.."+"..(tW[2]%st))
		elseif tW[1]=="!" then
			return loadstring(table.concat({unpack(tW,2)}," "))()
		elseif tW[1]=="!sudo" then
			local tx=table.concat({unpack(tW,3)}," ")
			if string.sub(tW[3],1,1)=="!" then
				os.queueEvent("chat_message",tW[2],tx)
			end
			prt("<"..tW[2].."> "..tx,nil,"")
		end
	elseif p[1]=="player_login" then
		prt(({string.gsub(set.greeting,"$p",p[2])})[1])
	elseif p[1]=="rednet_message" then
		os.queueEvent("chat_message",p[2],p[3])
	end
end
while true do
	local p={os.pullEvent()}
	if type(p) == "table" then
		local e={pcall(process,p)}
		local o
		for k,v in pairs({unpack(e,2)}) do
			o=infutil.serialize(v)
			prt(o)
		end
	end
end
