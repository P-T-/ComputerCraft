-- no coroutine mutitasking
routines={}
filters={}
local ate=false
local oldyield=coroutine.yield
local str_sub=string.sub
local pcall=pcall
local id=os.getComputerID()
function eatEvent()
	ate=true
end
function coroutine.yield(filter)
	while true do
		local p={oldyield()}
		ate=false
		for k,v in pairs(routines) do
			local f=filters[k]
			if f==p or not f then
				local a,b=pcall(v,unpack(p))
				if not a then
					routines[k]=nil
					error(b,2)
				end
			end
		end
		local fe=p[1]
		if not ate and (fe==filter or fe=="terminate" or not filter) then
			return unpack(p)
		end
	end
end
function add(func,name,filter)
	local n=name or func
	routines[n]=func
	filters[n]=filter
	return n
end
function remove(name)
	routines[name]=nil
	filters[name]=nil
end